version: "3.5"

x-app: &app
  build:
    context: .
    target: app
  ports:
  - 8000
  volumes:
    - ./src:/src
    - ./tests:/tests
    - ./deploy:/deploy
  links:
  - database
  environment: &app_environment
    DATAPUNT_API_URL: "https://api.data.amsterdam.nl/"
    SECRET_KEY: "dev"
    OBJECTSTORE_PASSWORD: "insecure"
    OBJECTSTORE_UPLOAD_CONTAINER_NAME: dev
    OBJECTSTORE_ENV: 'dev'


services:
  database:
    image: amsterdam/postgres11
    ports:
      - 5432
    environment:
      POSTGRES_DB: dev
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
    volumes:
      - "~/.ssh/datapunt.key:/root/.ssh/datapunt.key"
  
  app:
    <<: *app
    image: ${REGISTRY:-127.0.0.1:5001}/${REPOSITORY:-blackspots/api}:${VERSION:-latest}
#    image: docker-registry.data.amsterdam.nl/datapunt/blackspots:${VERSION:-latest}
    depends_on:
      - database

  dev:
    <<: *app
    build:
      context: .
      target: dev
    environment:
      <<: *app_environment
      DEBUG: 1
      USE_JWKS_TEST_KEY: "True"
    image: ${REGISTRY:-127.0.0.1:5001}/${REPOSITORY:-blackspots/api}-dev:${VERSION:-latest}
    command: "./manage.py runserver 0.0.0.0:8000"

  update_stadsdeel_errors:
    build:
      context: .
      target: app
    links:
      - database
    environment:
      CRET_KEY: "dev"
      TABASE_NAME: "dev"
      TABASE_USER: "dev"
      TABASE_PASSWORD: "dev"
    entrypoint: /deploy/wait-for-it.sh database:5432 --
    command: deploy/docker-update-stadsdelen.sh

  test:
    build:
      context: .
      target: tests
    volumes:
      - ./src:/src
      - ./tests:/tests
      - ./deploy:/deploy
    environment:
      SECRET_KEY: "tests"
      AUTHORIZATION_TOKEN: "dev"
      DJANGO_SETTINGS_MODULE: "main.settings"
      OBJECTSTORE_UPLOAD_CONTAINER_NAME: test
      OBJECTSTORE_ENV: test
      PYTEST_ADDOPTS:
      PYTHONBREAKPOINT:
    image: ${REGISTRY:-127.0.0.1:5001}/${REPOSITORY:-blackspots/api}-test:${VERSION:-latest}
    depends_on:
      - database
    entrypoint: /deploy/wait-for-it.sh database:5432 --
    command: pytest
